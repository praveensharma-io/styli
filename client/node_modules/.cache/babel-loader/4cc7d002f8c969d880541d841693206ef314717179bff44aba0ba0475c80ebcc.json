{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nconst useServerDrivenUI = (pageType, pageId, userContext = {}) => {\n  _s();\n  const [layout, setLayout] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastFetched, setLastFetched] = useState(null);\n  const fetchLayout = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const queryParams = new URLSearchParams({\n        ...userContext,\n        timestamp: Date.now() // Cache busting\n      });\n      const response = await fetch(`/api/layouts/${pageType}/${pageId}?${queryParams}`);\n      const data = await response.json();\n      if (data.success) {\n        setLayout(data.layout);\n        setLastFetched(Date.now());\n      } else {\n        setError(data.message || 'Failed to load layout');\n      }\n    } catch (error) {\n      console.error('Error fetching layout:', error);\n      setError('Failed to load page layout');\n    } finally {\n      setLoading(false);\n    }\n  }, [pageType, pageId, userContext]);\n  const refreshLayout = useCallback(() => {\n    fetchLayout();\n  }, [fetchLayout]);\n  const updateComponentData = useCallback((componentId, newData) => {\n    if (!layout) return;\n    setLayout(prevLayout => ({\n      ...prevLayout,\n      components: prevLayout.components.map(component => component.id === componentId ? {\n        ...component,\n        data: {\n          ...component.data,\n          ...newData\n        }\n      } : component)\n    }));\n  }, [layout]);\n  const getComponentById = useCallback(componentId => {\n    if (!layout) return null;\n    return layout.components.find(component => component.id === componentId);\n  }, [layout]);\n  const getComponentsByType = useCallback(componentType => {\n    if (!layout) return [];\n    return layout.components.filter(component => component.type === componentType);\n  }, [layout]);\n  useEffect(() => {\n    fetchLayout();\n  }, [fetchLayout]);\n  return {\n    layout,\n    loading,\n    error,\n    lastFetched,\n    refreshLayout,\n    updateComponentData,\n    getComponentById,\n    getComponentsByType\n  };\n};\n_s(useServerDrivenUI, \"VJyY/KxWkE9X/mXM6vB6h/IHzC4=\");\nexport default useServerDrivenUI;","map":{"version":3,"names":["useState","useEffect","useCallback","useServerDrivenUI","pageType","pageId","userContext","_s","layout","setLayout","loading","setLoading","error","setError","lastFetched","setLastFetched","fetchLayout","queryParams","URLSearchParams","timestamp","Date","now","response","fetch","data","json","success","message","console","refreshLayout","updateComponentData","componentId","newData","prevLayout","components","map","component","id","getComponentById","find","getComponentsByType","componentType","filter","type"],"sources":["/Users/macos/stylii/client/src/hooks/useServerDrivenUI.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\nconst useServerDrivenUI = (pageType, pageId, userContext = {}) => {\n  const [layout, setLayout] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastFetched, setLastFetched] = useState(null);\n\n  const fetchLayout = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const queryParams = new URLSearchParams({\n        ...userContext,\n        timestamp: Date.now() // Cache busting\n      });\n\n      const response = await fetch(`/api/layouts/${pageType}/${pageId}?${queryParams}`);\n      const data = await response.json();\n\n      if (data.success) {\n        setLayout(data.layout);\n        setLastFetched(Date.now());\n      } else {\n        setError(data.message || 'Failed to load layout');\n      }\n    } catch (error) {\n      console.error('Error fetching layout:', error);\n      setError('Failed to load page layout');\n    } finally {\n      setLoading(false);\n    }\n  }, [pageType, pageId, userContext]);\n\n  const refreshLayout = useCallback(() => {\n    fetchLayout();\n  }, [fetchLayout]);\n\n  const updateComponentData = useCallback((componentId, newData) => {\n    if (!layout) return;\n\n    setLayout(prevLayout => ({\n      ...prevLayout,\n      components: prevLayout.components.map(component =>\n        component.id === componentId\n          ? { ...component, data: { ...component.data, ...newData } }\n          : component\n      )\n    }));\n  }, [layout]);\n\n  const getComponentById = useCallback((componentId) => {\n    if (!layout) return null;\n    return layout.components.find(component => component.id === componentId);\n  }, [layout]);\n\n  const getComponentsByType = useCallback((componentType) => {\n    if (!layout) return [];\n    return layout.components.filter(component => component.type === componentType);\n  }, [layout]);\n\n  useEffect(() => {\n    fetchLayout();\n  }, [fetchLayout]);\n\n  return {\n    layout,\n    loading,\n    error,\n    lastFetched,\n    refreshLayout,\n    updateComponentData,\n    getComponentById,\n    getComponentsByType\n  };\n};\n\nexport default useServerDrivenUI; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}